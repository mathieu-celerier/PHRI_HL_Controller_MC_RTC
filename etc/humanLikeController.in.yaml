---
# If true, the FSM transitions are managed by an external tool
Managed: false
# If true and the FSM is self-managed, transitions should be triggered
StepByStep: true
# Change idle behaviour, if true the state is kept until transition,
# otherwise the FSM holds the last state until transition
IdleKeepState: true
# Where to look for state libraries
StatesLibraries:
- "@MC_STATES_DEFAULT_RUNTIME_INSTALL_PREFIX@"
- "@MC_STATES_RUNTIME_INSTALL_PREFIX@"
# Where to look for state files
StatesFiles:
- "@MC_STATES_DEFAULT_RUNTIME_INSTALL_PREFIX@/data"
- "@MC_STATES_RUNTIME_INSTALL_PREFIX@/data"
# If true, state factory will be more verbose
VerboseStateFactory: false
# Additional robots to load
robots:
  ground:
    module: env/ground
# General constraints, always on
# constraints:
#   - type: contact

# Collision constraint
# collisions:
# - type: collision
#   useMinimal: true

# Implement some additional text states
states:
  DoNothing:
    base: MetaTasks

  ControlModesFSM:
    base: Meta
    transitions:
      - [Released, MadeContact, InContact, Auto]
      - [Released, Interact, Interaction, Auto]
      - [InContact, Release, Released, Auto]
      - [InContact, Interact, Interaction, Auto]
      - [Interaction, Release, Released, Auto]
      - [Interaction, MadeContact, InContact, Auto]
      - [Interaction, Interact, Interaction, Auto]
      - [Released, Ok, BasicMotion, Auto]
      - [BasicMotion, Ok, Released, Auto]
      

  Manager:
    base: Parallel
    states: [Policy, ControlModesFSM]

transitions:
- [Manager, OK, Manager, Strict]

# Initial state
init: Manager

ObserverPipelines:
- name: PHRIPipeline
  observers:
    - type: Encoder
      config:
        velocity: encoderVelocities

PPCTask:
  speed: 0.1
  minDuration: 0.2
  rhoInf: [0.02,0.05,0.02,0.1,0.1,0.1]
  kp: 0.0001
  filterDecay: 1